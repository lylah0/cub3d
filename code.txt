# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    code.txt                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/08/20 16:50:35 by lylrandr          #+#    #+#              #
#    Updated: 2025/09/04 15:23:28 by lylrandr         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

#include "../cub3d.h"

void	init_mlx(t_data *data)
{
	data->game.mlx = mlx_init();
	data->game.win = mlx_new_window(data->game.mlx, 640, 600, "cub3d");
	mlx_key_hook(data->game.win, key_move, data);
	mlx_hook(data->game.win, 17, 0, close_window_x, data);
}

void	init_data(t_data *data, int fd)
{
	char	*line;

	line = get_next_line(fd);
	data->count = 0;
	while (line != NULL)
	{
		data->count++;
		free(line);
		line = get_next_line(fd);
	}
	close(fd);
	data->map = malloc(sizeof(char *) * ((data->count) + 1));
	data->file = malloc(sizeof(char *) * ((data->count) + 1));
	data->c_color = malloc(sizeof(char) * 16);
	data->f_color = malloc(sizeof(char) * 16);
}

//remplir la map
void	fill_map(int fd, t_data *data)
{
	int		y;
	char	*line;
	char	*temp;

	y = 0;
	line = get_next_line(fd);
	while (line != NULL && y < data->count)
	{
		temp = ft_strtrim(line, "\n");
		if (!temp)
		{
			printf("Error\n");
			exit(EXIT_FAILURE);
		}
		free(line);
		line = temp;
		data->file[y] = line;
		y++;
		line = get_next_line(fd);
	}
	data->file[data->count] = NULL;
	close(fd);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   keyboard_events.c                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/20 16:50:33 by lylrandr          #+#    #+#             */
/*   Updated: 2025/08/20 16:50:34 by lylrandr         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../cub3d.h"

int    close_window_x(void)
{
    exit(0);
    return (0);
}

int	key_move(int keycode, t_data *data)
{
	(void)data;
	if (keycode == KEY_ESC)
	{
        // free_all(void);
		exit(0);
	}
    // else if (keycode == KEY_W)
    // else if (keycode == KEY_A)
    // else if (keycode == KEY_S)
    // else if (keycode == KEY_D)
    // else if (keycode == KEY_LEFT)
    // else if (keycode == KEY_RIGHT)
    // else if (keycode == KEY_UP)
    // else if (keycode == KEY_DOWN)
	return (0);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/20 16:50:30 by lylrandr          #+#    #+#             */
/*   Updated: 2025/09/02 16:37:16 by lylrandr         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../cub3d.h"

static int	open_file(char *filename)
{
	int	fd;

	fd = open(filename, O_RDONLY);
	if (fd == -1)
	{
		printf("Error opening file\n");
		exit(1);
	}
	return (fd);
}

int main(int ac, char **av)
{
	t_data	data;
	int		fd;

	if (ac == 2)
	{
		fd = open_file(av[1]);
		init_data(&data, fd);
		fd = open_file(av[1]);
		fill_map(fd, &data);
		if (map_parser(&data))
			printf("manque info map\n");
		// print_map(&data);
		init_mlx(&data);
		put_map(&data);
		mlx_loop(data.game.mlx);
		return(0);
	}
	printf("too many or too few arguments.\n");
	return (1);
}
	/* ************************************************************************** */
	/*                                                                            */
	/*                                                        :::      ::::::::   */
	/*   parsing.c                                          :+:      :+:    :+:   */
	/*                                                    +:+ +:+         +:+     */
	/*   By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+        */
	/*                                                +#+#+#+#+#+   +#+           */
	/*   Created: 2025/08/20 16:50:27 by lylrandr          #+#    #+#             */
	/*   Updated: 2025/08/28 17:37:38 by lylrandr         ###   ########.fr       */
	/*                                                                            */
	/* ************************************************************************** */

	#include "../cub3d.h"

	int	spawn_setter(t_data *data)
	{
		static const char *expect[4] = {
			"NO ./path_north_texture",
			"SO ./path_south_texture",
			"WE ./path_west_texture",
			"EA ./path_east_texture"
		};
		int i;
		int k;

		if (!data || !data->file || data->count < 4)
			return (0);

		i = 0;
		while (i + 3 < data->count)
		{
			k = 0;
			while (k < 4 && data->file[i + k]
				&& ft_strncmp(data->file[i + k], expect[k], ft_strlen(expect[k])) == 0)
				k++;
			if (k == 4)
				return (1);
			i++;
		}
		return (0);
	}

	int	color_setter(t_data *data)
	{
		int	i;
		int	j;

		i = 0;
		while (i < data->count && data->file[i])
		{
			j = 0;
			if (data->file[i][j] == 'F')
			{
				i++;
				if (i >= data->count || !data->file[i])
					return (0);
				if (data->file[i][j] == 'C')
				{
					data->f_color = ft_strdup(data->file[i - 1]);
					data->c_color = ft_strdup(data->file[i]);
					return (1);
				}
				return (0);
			}
			i++;
		}
		return (0);
	}

	int map_setter(t_data *data)
	{
		int i;
		int y;

		if (!data || !data->file || !data->map)
			return (0);

		i = 0;
		while (data->file[i] && data->file[i][0] != '1'
			&& data->file[i][0] != ' ' && data->file[i][0] != '\t')
			i++;
		if (!data->file[i])
			return (0);
		y = 0;
		while (data->file[i] && (data->file[i][0] == '1'
			|| data->file[i][0] == ' ' || data->file[i][0] == '\t'))
		{
			data->map[y] = ft_strdup(data->file[i]);
			if (!data->map[y])
				return (0);
			i++;
			y++;
		}
		data->map[y] = NULL;
		return (1);
	}

	int	map_parser(t_data *data)
	{
		(void)data;
		if (!spawn_setter(data))
		{
			printf("missing spawn\n");
			return (1);
		}
		if (!color_setter(data))
		{
			printf("missing color\n");
			return(1);
		}
		if (!map_setter(data))
		{
			printf("missing map\n");
			return (1);
		}
		return (0);
	}


/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   put_map.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/28 16:31:34 by lylrandr          #+#    #+#             */
/*   Updated: 2025/09/02 17:37:37 by lylrandr         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../cub3d.h"

static inline int rgb_to_int(int r, int g, int b)
{
	return ((r & 0xFF) << 16)
	| ((g & 0xFF) << 8) | (b & 0xFF);
}


static void draw_cell(t_data *data, int x, int y, int color)
{
	int px0 = x * TILE;
	int py0 = y * TILE;
	int py;
	int px;

	py = 0;
	while (py < TILE)
	{
		px = 0;
		while (px < TILE)
		{
			mlx_pixel_put(data->game.mlx,  data->game.win, px0 + px, py0 + py, color);
			px++;
		}
		py++;
	}
}

// afficher la map en 2d
void put_map(t_data *data)
{
	int		y;
	int		x;
	char	c;

	if (!data || !data->map || !data->game.mlx || !data->game.win)
		return;
	y = 0;
	while (data->map[y])
	{
		x = 0;
		while (data->map[y][x])
		{
			c = data->map[y][x];
			if (c == '\t' || c == ' ')
			{
				x++;
				continue;
			}
			if (c == '1')
				draw_cell(data, x, y, rgb_to_int(255, 192, 203));
			else if (c == '0')
				draw_cell(data, x, y, rgb_to_int(204, 169, 221));
			else if (c=='N'||c=='S'||c=='W'||c=='E')
				draw_cell(data, x, y, rgb_to_int(179, 197, 144));
			else
				draw_cell(data, x, y, 0);
			x++;
		}
		y++;
	}
}

/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   tester.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lylrandr <lylrandr@student.42lausanne.ch>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/20 17:02:51 by lylrandr          #+#    #+#             */
/*   Updated: 2025/08/25 18:44:39 by lylrandr         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../cub3d.h"

void print_map(t_data *data)
{
	int i;

	if (!data->map)
		printf("no map\n");
	i = 0;
	while (data->map && data->map[i])
	{
		printf("%s\n", data->map[i]);
		i++;
	}
}

